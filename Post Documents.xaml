<Activity mc:Ignorable="sap sap2010" x:Class="Main" this:Main.NumberOfTries="1" this:Main.RequestTimeout="15000" this:Main.DomainURL="https://api-i-test.sundsvall.se" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="Token" Type="InArgument(njl:JToken)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property Name="NumberOfTries" Type="InArgument(x:Int32)" />
    <x:Property Name="RequestTimeout" Type="InArgument(x:Int32)" />
    <x:Property Name="DomainURL" Type="InArgument(x:String)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property Name="Version" Type="InArgument(x:String)" />
    <x:Property Name="MunicipalityId" Type="InArgument(x:String)" />
    <x:Property Name="Description" Type="InArgument(x:String)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property Name="CreatedBy" Type="InArgument(x:String)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property Name="Confidential" Type="InArgument(x:Boolean)" />
    <x:Property Name="LegalCitation" Type="InArgument(x:String)" />
    <x:Property Name="Archive" Type="InArgument(x:Boolean)" />
    <x:Property Name="TypeOfDocument" Type="InArgument(x:String)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property Name="MetadataDict" Type="InArgument(scg:Dictionary(x:String, x:String))" />
    <x:Property Name="DocumentsFilePath" Type="InArgument(scg:List(x:String))">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
  </x:Members>
  <this:Main.Archive>
    <InArgument x:TypeArguments="x:Boolean" />
  </this:Main.Archive>
  <this:Main.TypeOfDocument>
    <InArgument x:TypeArguments="x:String" />
  </this:Main.TypeOfDocument>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>2660,3319</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Collections.Specialized</x:String>
      <x:String>UiPath.Web</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.Web.Activities</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>UiPath.Web</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap:VirtualizedContainerService.HintSize="554,3254" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="EndpointURL">
        <Variable.Default>
          <Literal x:TypeArguments="x:String">/document/{version}/{municipalityId}/documents</Literal>
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="njl:JObject" Default="[new JObject]" Name="DocumentBody" />
      <Variable x:TypeArguments="x:String" Name="ResultString" />
      <Variable x:TypeArguments="njl:JObject" Name="ResponseJObject">
        <Variable.Default>
          <mva:VisualBasicValue x:TypeArguments="njl:JObject" ExpressionText="new JObject" />
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="x:String" Name="RequestString" />
      <Variable x:TypeArguments="njl:JObject" Name="RequestBody">
        <Variable.Default>
          <mva:VisualBasicValue x:TypeArguments="njl:JObject" ExpressionText="New JObject" />
        </Variable.Default>
      </Variable>
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <If Condition="[String.IsNullOrWhiteSpace(MunicipalityId)]" DisplayName="If Municipality Is Empty" sap:VirtualizedContainerService.HintSize="512,25" sap2010:WorkflowViewState.IdRef="If_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="476,169" sap2010:WorkflowViewState.IdRef="Sequence_3">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign DisplayName="Assign MunicipalityId" sap:VirtualizedContainerService.HintSize="434,81" sap2010:WorkflowViewState.IdRef="Assign_1">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[MunicipalityId]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">2281</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_4">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </Sequence>
      </If.Else>
    </If>
    <If Condition="[String.IsNullOrWhiteSpace(Version)]" DisplayName="If Version Is Empty" sap:VirtualizedContainerService.HintSize="512,25" sap2010:WorkflowViewState.IdRef="If_2">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="476,169" sap2010:WorkflowViewState.IdRef="Sequence_5">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign sap:VirtualizedContainerService.HintSize="434,81" sap2010:WorkflowViewState.IdRef="Assign_2">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[Version]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">3.0</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_6">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </Sequence>
      </If.Else>
    </If>
    <If Condition="[NumberOfTries = 0]" DisplayName="If No Retries" sap:VirtualizedContainerService.HintSize="512,25" sap2010:WorkflowViewState.IdRef="If_3">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Throw DisplayName="Throw SE" Exception="[new SystemException(&quot;Number of retries needs to be 1 or more&quot;)]" sap:VirtualizedContainerService.HintSize="200,25" sap2010:WorkflowViewState.IdRef="Throw_1" />
      </If.Then>
    </If>
    <If Condition="[Description.Length &gt;8192]" DisplayName="If Description is Longer than 8192 char" sap:VirtualizedContainerService.HintSize="512,25" sap2010:WorkflowViewState.IdRef="If_4">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="300,113" sap2010:WorkflowViewState.IdRef="Sequence_7">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Throw Exception="[New SystemException(&quot;Description is longer than the maximun length of 8192 characters.&quot;)]" sap:VirtualizedContainerService.HintSize="258,25" sap2010:WorkflowViewState.IdRef="Throw_2" />
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_8">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </Sequence>
      </If.Else>
    </If>
    <Assign DisplayName="Private: Assign URL" sap:VirtualizedContainerService.HintSize="512,82" sap2010:WorkflowViewState.IdRef="Assign_3">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[EndpointURL]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[if(DomainURL.EndsWith("/"),DomainURL.Remove(DomainURL.Length-1,1),DomainURL) + EndpointURL]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Replace Variables in URL" sap:VirtualizedContainerService.HintSize="512,82" sap2010:WorkflowViewState.IdRef="Assign_4">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[EndpointURL]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[EndpointURL.Replace("{version}",Version).Replace("{municipalityId}", MunicipalityId)]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="512,92" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Post a Document to API&quot;]" />
    <Sequence DisplayName="Create Document Body" sap:VirtualizedContainerService.HintSize="512,1488" sap2010:WorkflowViewState.IdRef="Sequence_2">
      <Sequence.Variables>
        <Variable x:TypeArguments="njl:JObject" Default="[new JObject]" Name="ConfidentialityText" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <InvokeMethod DisplayName="Add CreatedBy" sap:VirtualizedContainerService.HintSize="450,136" sap2010:WorkflowViewState.IdRef="InvokeMethod_1" MethodName="Add">
        <InvokeMethod.TargetObject>
          <InArgument x:TypeArguments="njl:JObject">[DocumentBody]</InArgument>
        </InvokeMethod.TargetObject>
        <InArgument x:TypeArguments="x:String">createdBy</InArgument>
        <InArgument x:TypeArguments="njl:JToken">[CreatedBy]</InArgument>
      </InvokeMethod>
      <InvokeMethod DisplayName="Add Confidentiality" sap:VirtualizedContainerService.HintSize="450,136" sap2010:WorkflowViewState.IdRef="InvokeMethod_2" MethodName="Add">
        <InvokeMethod.TargetObject>
          <InArgument x:TypeArguments="njl:JObject">[ConfidentialityText]</InArgument>
        </InvokeMethod.TargetObject>
        <InArgument x:TypeArguments="x:String">confidential</InArgument>
        <InArgument x:TypeArguments="njl:JToken">[Confidential]</InArgument>
      </InvokeMethod>
      <If Condition="[Confidential]" DisplayName="If - Confidentiality" sap:VirtualizedContainerService.HintSize="450,25" sap2010:WorkflowViewState.IdRef="If_6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Sequence sap:VirtualizedContainerService.HintSize="526,566" sap2010:WorkflowViewState.IdRef="Sequence_11">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If Condition="[if(Confidential, String.IsNullOrWhiteSpace(LegalCitation), False)]" DisplayName="If - Requierd data is missing" sap:VirtualizedContainerService.HintSize="484,302" sap2010:WorkflowViewState.IdRef="If_5">
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="300,113" sap2010:WorkflowViewState.IdRef="Sequence_9">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Throw Exception="[new ArgumentNullException(if(String.IsNullOrWhitespace(LegalCitation),&quot;LegalCitation&quot;,nothing))]" sap:VirtualizedContainerService.HintSize="258,25" sap2010:WorkflowViewState.IdRef="Throw_3" />
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_10">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Sequence>
              </If.Else>
            </If>
            <InvokeMethod DisplayName="Add LegalCitation" sap:VirtualizedContainerService.HintSize="484,136" sap2010:WorkflowViewState.IdRef="InvokeMethod_3" MethodName="Add">
              <InvokeMethod.TargetObject>
                <InArgument x:TypeArguments="njl:JObject">[ConfidentialityText]</InArgument>
              </InvokeMethod.TargetObject>
              <InArgument x:TypeArguments="x:String">
                <Literal x:TypeArguments="x:String">legalCitation</Literal>
              </InArgument>
              <InArgument x:TypeArguments="njl:JToken">
                <mva:VisualBasicValue x:TypeArguments="njl:JToken" ExpressionText="LegalCitation" />
              </InArgument>
            </InvokeMethod>
          </Sequence>
        </If.Then>
        <If.Else>
          <Sequence sap:VirtualizedContainerService.HintSize="300,80" sap2010:WorkflowViewState.IdRef="Sequence_12">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </Sequence>
        </If.Else>
      </If>
      <InvokeMethod DisplayName="Add ConfidentialityText to RequestBody" sap:VirtualizedContainerService.HintSize="450,136" sap2010:WorkflowViewState.IdRef="InvokeMethod_4" MethodName="Add">
        <InvokeMethod.TargetObject>
          <InArgument x:TypeArguments="njl:JObject">[DocumentBody]</InArgument>
        </InvokeMethod.TargetObject>
        <InArgument x:TypeArguments="x:String">confidentiality</InArgument>
        <InArgument x:TypeArguments="njl:JToken">[ConfidentialityText]</InArgument>
      </InvokeMethod>
      <InvokeMethod DisplayName="Add Archive" sap:VirtualizedContainerService.HintSize="450,136" sap2010:WorkflowViewState.IdRef="InvokeMethod_5" MethodName="Add">
        <InvokeMethod.TargetObject>
          <InArgument x:TypeArguments="njl:JObject">[DocumentBody]</InArgument>
        </InvokeMethod.TargetObject>
        <InArgument x:TypeArguments="x:String">archive</InArgument>
        <InArgument x:TypeArguments="njl:JToken">[Archive]</InArgument>
      </InvokeMethod>
      <InvokeMethod DisplayName="Add Description" sap:VirtualizedContainerService.HintSize="450,136" sap2010:WorkflowViewState.IdRef="InvokeMethod_6" MethodName="Add">
        <InvokeMethod.TargetObject>
          <InArgument x:TypeArguments="njl:JObject">[DocumentBody]</InArgument>
        </InvokeMethod.TargetObject>
        <InArgument x:TypeArguments="x:String">description</InArgument>
        <InArgument x:TypeArguments="njl:JToken">[Description]</InArgument>
      </InvokeMethod>
      <Sequence DisplayName="metadataList" sap:VirtualizedContainerService.HintSize="450,80" sap2010:WorkflowViewState.IdRef="Sequence_13">
        <Sequence.Variables>
          <Variable x:TypeArguments="njl:JObject" Default="[new JObject]" Name="JObject" />
          <Variable x:TypeArguments="njl:JObject" Default="[new JObject]" Name="KeyValuePairJObject" />
          <Variable x:TypeArguments="njl:JToken" Name="ExistingJObject" />
          <Variable x:TypeArguments="njl:JArray" Name="MetaDataList">
            <Variable.Default>
              <mva:VisualBasicValue x:TypeArguments="njl:JArray" ExpressionText="new JArray" />
            </Variable.Default>
          </Variable>
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:ForEach x:TypeArguments="scg:KeyValuePair(x:String, x:String)" CurrentIndex="{x:Null}" DisplayName="For Each - MetadataDict" sap:VirtualizedContainerService.HintSize="434,702" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[MetadataDict]">
          <ui:ForEach.Body>
            <ActivityAction x:TypeArguments="scg:KeyValuePair(x:String, x:String)">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="scg:KeyValuePair(x:String, x:String)" Name="currentItem" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="300,576" sap2010:WorkflowViewState.IdRef="Sequence_18">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <InvokeMethod DisplayName="Add KeyValuePair" sap:VirtualizedContainerService.HintSize="258,136" sap2010:WorkflowViewState.IdRef="InvokeMethod_14" MethodName="Add">
                  <InvokeMethod.TargetObject>
                    <InArgument x:TypeArguments="njl:JObject">[KeyValuePairJObject]</InArgument>
                  </InvokeMethod.TargetObject>
                  <InArgument x:TypeArguments="x:String">
                    <Literal x:TypeArguments="x:String">key</Literal>
                  </InArgument>
                  <InArgument x:TypeArguments="njl:JToken">
                    <mva:VisualBasicValue x:TypeArguments="njl:JToken" ExpressionText="currentItem.Key.ToString" />
                  </InArgument>
                </InvokeMethod>
                <InvokeMethod DisplayName="Add KeyValuePair" sap:VirtualizedContainerService.HintSize="258,136" sap2010:WorkflowViewState.IdRef="InvokeMethod_15" MethodName="Add">
                  <InvokeMethod.TargetObject>
                    <InArgument x:TypeArguments="njl:JObject">[KeyValuePairJObject]</InArgument>
                  </InvokeMethod.TargetObject>
                  <InArgument x:TypeArguments="x:String">
                    <Literal x:TypeArguments="x:String">value</Literal>
                  </InArgument>
                  <InArgument x:TypeArguments="njl:JToken">
                    <mva:VisualBasicValue x:TypeArguments="njl:JToken" ExpressionText="currentItem.Value.ToString" />
                  </InArgument>
                </InvokeMethod>
                <InvokeMethod DisplayName="Add KeyValuePair" sap:VirtualizedContainerService.HintSize="258,136" sap2010:WorkflowViewState.IdRef="InvokeMethod_16" MethodName="Add">
                  <InvokeMethod.TargetObject>
                    <InArgument x:TypeArguments="njl:JArray">[MetaDataList]</InArgument>
                  </InvokeMethod.TargetObject>
                  <InArgument x:TypeArguments="njl:JToken">
                    <mva:VisualBasicValue x:TypeArguments="njl:JToken" ExpressionText="KeyValuePairJObject" />
                  </InArgument>
                </InvokeMethod>
              </Sequence>
            </ActivityAction>
          </ui:ForEach.Body>
        </ui:ForEach>
        <InvokeMethod DisplayName="Add JArray" sap:VirtualizedContainerService.HintSize="434,136" sap2010:WorkflowViewState.IdRef="InvokeMethod_11" MethodName="Add">
          <InvokeMethod.TargetObject>
            <InArgument x:TypeArguments="njl:JObject">[DocumentBody]</InArgument>
          </InvokeMethod.TargetObject>
          <InArgument x:TypeArguments="x:String">
            <Literal x:TypeArguments="x:String">metadataList</Literal>
          </InArgument>
          <InArgument x:TypeArguments="njl:JArray">
            <mva:VisualBasicValue x:TypeArguments="njl:JArray" ExpressionText="MetaDataList" />
          </InArgument>
        </InvokeMethod>
      </Sequence>
      <InvokeMethod DisplayName="Add Type" sap:VirtualizedContainerService.HintSize="450,136" sap2010:WorkflowViewState.IdRef="InvokeMethod_12" MethodName="Add">
        <InvokeMethod.TargetObject>
          <InArgument x:TypeArguments="njl:JObject">[DocumentBody]</InArgument>
        </InvokeMethod.TargetObject>
        <InArgument x:TypeArguments="x:String">type</InArgument>
        <InArgument x:TypeArguments="njl:JToken">[TypeOfDocument]</InArgument>
      </InvokeMethod>
      <InvokeMethod DisplayName="Add To Request Body" sap:VirtualizedContainerService.HintSize="450,136" sap2010:WorkflowViewState.IdRef="InvokeMethod_22" MethodName="Add">
        <InvokeMethod.TargetObject>
          <InArgument x:TypeArguments="njl:JObject">[RequestBody]</InArgument>
        </InvokeMethod.TargetObject>
        <InArgument x:TypeArguments="x:String">
          <Literal x:TypeArguments="x:String">document</Literal>
        </InArgument>
        <InArgument x:TypeArguments="njl:JToken">
          <mva:VisualBasicValue x:TypeArguments="njl:JToken" ExpressionText="DocumentBody" />
        </InArgument>
      </InvokeMethod>
    </Sequence>
    <Sequence DisplayName="Create DocumentFiles Body" sap:VirtualizedContainerService.HintSize="512,312" sap2010:WorkflowViewState.IdRef="Sequence_17">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="DocumentString" />
        <Variable x:TypeArguments="njl:JArray" Name="DocumentsList">
          <Variable.Default>
            <mva:VisualBasicValue x:TypeArguments="njl:JArray" ExpressionText="New JArray" />
          </Variable.Default>
        </Variable>
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each - DocumentsFilePath" sap:VirtualizedContainerService.HintSize="388,25" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[DocumentsFilePath]">
        <ui:ForEach.Body>
          <ActivityAction x:TypeArguments="x:String">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="x:String" Name="currentItem" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="476,346" sap2010:WorkflowViewState.IdRef="Sequence_20">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Assign - DocumentString" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_8">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[DocumentString]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[String.Join(" ", IO.File.ReadAllBytes(currentItem).Select(Function(b) Convert.ToString(b, 2).PadLeft(8, "0"c)))]</InArgument>
                </Assign.Value>
              </Assign>
              <InvokeMethod DisplayName="Add DocumentString" sap:VirtualizedContainerService.HintSize="434,136" sap2010:WorkflowViewState.IdRef="InvokeMethod_13" MethodName="Add">
                <InvokeMethod.TargetObject>
                  <InArgument x:TypeArguments="njl:JArray">[DocumentsList]</InArgument>
                </InvokeMethod.TargetObject>
                <InArgument x:TypeArguments="x:String">
                  <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="DocumentString" />
                </InArgument>
              </InvokeMethod>
            </Sequence>
          </ActivityAction>
        </ui:ForEach.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ForEach>
      <InvokeMethod DisplayName="Add JArray to RequestBody" sap:VirtualizedContainerService.HintSize="388,136" sap2010:WorkflowViewState.IdRef="InvokeMethod_18" MethodName="Add">
        <InvokeMethod.TargetObject>
          <InArgument x:TypeArguments="njl:JObject">[RequestBody]</InArgument>
        </InvokeMethod.TargetObject>
        <InArgument x:TypeArguments="x:String">
          <Literal x:TypeArguments="x:String">documentFiles</Literal>
        </InArgument>
        <InArgument x:TypeArguments="njl:JArray">
          <mva:VisualBasicValue x:TypeArguments="njl:JArray" ExpressionText="DocumentsList" />
        </InArgument>
      </InvokeMethod>
    </Sequence>
    <TryCatch DisplayName="Private: Try Catch Call" sap:VirtualizedContainerService.HintSize="512,518" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <TryCatch.Variables>
        <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="Headers" />
        <Variable x:TypeArguments="x:Int32" Name="StatusCode" />
      </TryCatch.Variables>
      <TryCatch.Try>
        <ui:RetryScope DisplayName="Private: Retry Scope Request" sap:VirtualizedContainerService.HintSize="376,290" sap2010:WorkflowViewState.IdRef="RetryScope_1" NumberOfRetries="[NumberOfTries]" RetryInterval="00:00:05">
          <ui:RetryScope.ActivityBody>
            <ActivityAction>
              <ui:HttpClient ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" FileAttachments="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseAttachment="{x:Null}" SecureClientCertificatePassword="{x:Null}" SecurePassword="{x:Null}" Username="{x:Null}" AcceptFormat="ANY" AuthenticationType="None" Body="[RequestBody.ToString]" BodyFormat="multipart/form-data" ClientCertificate="[Nothing]" ClientCertificatePassword="[Nothing]" DisplayName="Private: HTTP Request" EnableSSLVerification="True" EndPoint="[EndpointURL]" sap:VirtualizedContainerService.HintSize="204,70" sap2010:WorkflowViewState.IdRef="HttpClient_1" Method="POST" ResponseHeaders="[Headers]" Result="[ResultString]" StatusCode="[StatusCode]" TimeoutMS="[RequestTimeout]">
                <ui:HttpClient.Attachments>
                  <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                </ui:HttpClient.Attachments>
                <ui:HttpClient.Cookies>
                  <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                </ui:HttpClient.Cookies>
                <ui:HttpClient.Headers>
                  <InArgument x:TypeArguments="x:String" x:Key="Authorization">
                    <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="&quot;Bearer &quot; + Token.ToString.Replace(&quot;[&quot;, &quot;&quot;).Replace(&quot;]&quot;, &quot;&quot;)" />
                  </InArgument>
                </ui:HttpClient.Headers>
                <ui:HttpClient.Parameters>
                  <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                </ui:HttpClient.Parameters>
                <ui:HttpClient.UrlSegments>
                  <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                </ui:HttpClient.UrlSegments>
              </ui:HttpClient>
            </ActivityAction>
          </ui:RetryScope.ActivityBody>
          <ui:RetryScope.Condition>
            <ActivityFunc x:TypeArguments="x:Boolean">
              <ui:IsMatch BuilderPattern="(201)" DisplayName="Private: Success Status Code" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="IsMatch_1" Input="[StatusCode.ToString]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;ADV&quot;,&quot;OperationName&quot;:&quot;Advanced&quot;,&quot;OperationValue&quot;:&quot;(201)&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="(201)" RegexOption="IgnoreCase, Compiled" />
            </ActivityFunc>
          </ui:RetryScope.Condition>
        </ui:RetryScope>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence sap:VirtualizedContainerService.HintSize="376,245" sap2010:WorkflowViewState.IdRef="Sequence_16">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:LogMessage DisplayName="Log Message Error With String" sap:VirtualizedContainerService.HintSize="334,92" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Error" Message="[&quot;REST call to &quot; + EndpointURL + &quot; unsuccessful with code &quot;+ StatusCode.ToString + &quot; and returned string: &quot; + ResultString]" />
              <Rethrow sap:VirtualizedContainerService.HintSize="334,25" sap2010:WorkflowViewState.IdRef="Rethrow_1" />
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="512,92" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;Succeeded to post a document.&quot;]" />
  </Sequence>
</Activity>